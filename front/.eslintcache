[{"/home/wilder/Documents/projets/Young_Tech/front/src/components/Unauthorized.js":"1","/home/wilder/Documents/projets/Young_Tech/front/src/pages/SignIn.js":"2","/home/wilder/Documents/projets/Young_Tech/front/src/pages/AdminProfile.js":"3","/home/wilder/Documents/projets/Young_Tech/front/src/components/UpdateProfileForm/UpdateCompagnyProfile.js":"4","/home/wilder/Documents/projets/Young_Tech/front/src/components/UpdateProfileForm/UpdateAdminProfile.js":"5","/home/wilder/Documents/projets/Young_Tech/front/src/index.js":"6","/home/wilder/Documents/projets/Young_Tech/front/src/pages/ErrorPage.js":"7","/home/wilder/Documents/projets/Young_Tech/front/src/pages/CompagnyProfile.js":"8","/home/wilder/Documents/projets/Young_Tech/front/src/pages/ApplicationForm.js":"9","/home/wilder/Documents/projets/Young_Tech/front/src/components/Comment.js":"10","/home/wilder/Documents/projets/Young_Tech/front/src/components/Navbar.js":"11","/home/wilder/Documents/projets/Young_Tech/front/src/components/DescriptionJob.js":"12","/home/wilder/Documents/projets/Young_Tech/front/src/components/Header.js":"13","/home/wilder/Documents/projets/Young_Tech/front/src/components/formik/Textarea.js":"14","/home/wilder/Documents/projets/Young_Tech/front/src/components/formik/TextError.js":"15","/home/wilder/Documents/projets/Young_Tech/front/src/pages/Register.js":"16","/home/wilder/Documents/projets/Young_Tech/front/src/components/UpdateProfileForm/UpdateUserProfile.js":"17","/home/wilder/Documents/projets/Young_Tech/front/src/serviceWorker.js":"18","/home/wilder/Documents/projets/Young_Tech/front/src/pages/Application.js":"19","/home/wilder/Documents/projets/Young_Tech/front/src/components/LatestJob.js":"20","/home/wilder/Documents/projets/Young_Tech/front/src/components/Button.js":"21","/home/wilder/Documents/projets/Young_Tech/front/src/components/JobContent.js":"22","/home/wilder/Documents/projets/Young_Tech/front/src/components/formik/DatePicker.js":"23","/home/wilder/Documents/projets/Young_Tech/front/src/components/formik/RadioButtons.js":"24","/home/wilder/Documents/projets/Young_Tech/front/src/pages/Homepage.js":"25","/home/wilder/Documents/projets/Young_Tech/front/src/pages/JobPage.js":"26","/home/wilder/Documents/projets/Young_Tech/front/src/pages/CreateAd.js":"27","/home/wilder/Documents/projets/Young_Tech/front/src/pages/UpdateAd.js":"28","/home/wilder/Documents/projets/Young_Tech/front/src/components/Hero.js":"29","/home/wilder/Documents/projets/Young_Tech/front/src/components/FilterBar.js":"30","/home/wilder/Documents/projets/Young_Tech/front/src/components/formik/FormikControl.js":"31","/home/wilder/Documents/projets/Young_Tech/front/src/components/JobList.js":"32","/home/wilder/Documents/projets/Young_Tech/front/src/components/formik/Select.js":"33","/home/wilder/Documents/projets/Young_Tech/front/src/App.js":"34","/home/wilder/Documents/projets/Young_Tech/front/src/components/Category.js":"35","/home/wilder/Documents/projets/Young_Tech/front/src/components/formik/Input.js":"36","/home/wilder/Documents/projets/Young_Tech/front/src/pages/UserProfile.js":"37","/home/wilder/Documents/projets/Young_Tech/front/src/components/DeleteAccount.js":"38","/home/wilder/Documents/projets/Young_Tech/front/src/services/services.js":"39","/home/wilder/Documents/projets/Young_Tech/front/src/controllers/validationSchema.js":"40"},{"size":457,"mtime":1606742106961,"results":"41","hashOfConfig":"42"},{"size":3396,"mtime":1607695621080,"results":"43","hashOfConfig":"42"},{"size":5525,"mtime":1608387829445,"results":"44","hashOfConfig":"42"},{"size":5032,"mtime":1606742106961,"results":"45","hashOfConfig":"42"},{"size":4883,"mtime":1606742106961,"results":"46","hashOfConfig":"42"},{"size":532,"mtime":1606154689724,"results":"47","hashOfConfig":"42"},{"size":475,"mtime":1606154689724,"results":"48","hashOfConfig":"42"},{"size":2959,"mtime":1607177798905,"results":"49","hashOfConfig":"42"},{"size":6204,"mtime":1607179793389,"results":"50","hashOfConfig":"42"},{"size":662,"mtime":1606154689724,"results":"51","hashOfConfig":"42"},{"size":2699,"mtime":1606742106961,"results":"52","hashOfConfig":"42"},{"size":2255,"mtime":1606154689724,"results":"53","hashOfConfig":"42"},{"size":235,"mtime":1608664082664,"results":"54","hashOfConfig":"42"},{"size":458,"mtime":1606154689724,"results":"55","hashOfConfig":"42"},{"size":188,"mtime":1606742106961,"results":"56","hashOfConfig":"42"},{"size":6798,"mtime":1607780089554,"results":"57","hashOfConfig":"42"},{"size":4892,"mtime":1606742106961,"results":"58","hashOfConfig":"42"},{"size":5086,"mtime":1601368025791,"results":"59","hashOfConfig":"42"},{"size":1859,"mtime":1606742106961,"results":"60","hashOfConfig":"42"},{"size":404,"mtime":1606154689724,"results":"61","hashOfConfig":"42"},{"size":292,"mtime":1606742106961,"results":"62","hashOfConfig":"42"},{"size":4858,"mtime":1606742106961,"results":"63","hashOfConfig":"42"},{"size":851,"mtime":1606154689724,"results":"64","hashOfConfig":"42"},{"size":1062,"mtime":1606742106961,"results":"65","hashOfConfig":"42"},{"size":571,"mtime":1606154689724,"results":"66","hashOfConfig":"42"},{"size":1790,"mtime":1606742106961,"results":"67","hashOfConfig":"42"},{"size":4587,"mtime":1606742106961,"results":"68","hashOfConfig":"42"},{"size":5342,"mtime":1606742106961,"results":"69","hashOfConfig":"42"},{"size":1011,"mtime":1606154689724,"results":"70","hashOfConfig":"42"},{"size":2249,"mtime":1606154689724,"results":"71","hashOfConfig":"42"},{"size":669,"mtime":1607695621080,"results":"72","hashOfConfig":"42"},{"size":981,"mtime":1606154689724,"results":"73","hashOfConfig":"42"},{"size":907,"mtime":1606154689724,"results":"74","hashOfConfig":"42"},{"size":3277,"mtime":1606742106961,"results":"75","hashOfConfig":"42"},{"size":213,"mtime":1606154689724,"results":"76","hashOfConfig":"42"},{"size":439,"mtime":1607695621080,"results":"77","hashOfConfig":"42"},{"size":2575,"mtime":1606154689724,"results":"78","hashOfConfig":"42"},{"size":1773,"mtime":1606742106961,"results":"79","hashOfConfig":"42"},{"size":2129,"mtime":1606742106961,"results":"80","hashOfConfig":"42"},{"size":1410,"mtime":1607780121530,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"8tf779",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"93"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"100"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"100"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"93"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"93"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"93"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"/home/wilder/Documents/projets/Young_Tech/front/src/components/Unauthorized.js",[],["180","181"],"/home/wilder/Documents/projets/Young_Tech/front/src/pages/SignIn.js",[],["182","183"],"/home/wilder/Documents/projets/Young_Tech/front/src/pages/AdminProfile.js",["184"],"/home/wilder/Documents/projets/Young_Tech/front/src/components/UpdateProfileForm/UpdateCompagnyProfile.js",["185","186"],"import React, { useState } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport decode from \"jwt-decode\";\n//components\nimport FormikControl from \"../formik/FormikControl\";\nimport Button from \"../Button\";\n\nconst UpdateCompagnyForm = (props) => {\n  //get the user's id form localstorage\n  const token = localStorage.getItem(\"token\");\n  const { userID } = decode(token);\n  // get user's details from userProfile component\n  const userDetails = props.userDetails;\n\n  const [response, setResponse] = useState();\n\n  const initialValues = {\n    first_name: userDetails.first_name,\n    last_name: userDetails.last_name,\n    email: userDetails.email,\n    phone: userDetails.phone,\n    logo: userDetails.logo,\n    password: \"\",\n    repeat_password: \"\",\n    description_compagny: userDetails.description_compagny,\n    compagny_name: userDetails.compagny_name,\n  };\n\n  //set rules for validating of the field's form\n  const validationSchema = Yup.object({\n    first_name: Yup.string(),\n    last_name: Yup.string(),\n    type: Yup.string(),\n    email: Yup.string().email(\"Le format de l'email est incorrect\"),\n    password: Yup.string(),\n    repeat_password: Yup.string().oneOf(\n      [Yup.ref(\"password\"), \"\"],\n      \"Les mots de passe doivent être indentiques\"\n    ),\n    phone: Yup.string(),\n    description_compagny: Yup.string(),\n    compagny_name: Yup.string(),\n  });\n\n  function keepOnlyChangedValues(object1, object2) {\n    const keys1 = Object.keys(object1);\n    for (let key of keys1) {\n      if (object1[key] === object2[key]) {\n        delete object2[key];\n      }\n    }\n  }\n\n  //send new user's details to the BDD\n  const onSubmit = async (values, onSubmitProps) => {\n    keepOnlyChangedValues(initialValues, values);\n\n    delete values[\"repeat_password\"];\n\n    const confirmChoice = window.confirm(\n      \"Etes-vous sûr de vouloir modifier vos données ? \"\n    );\n\n    try {\n      if (confirmChoice) {\n        const url = `http://localhost:4040/allpeople/updateProfile/${userID}`;\n        await axios({\n          method: \"PUT\",\n          url: url,\n          data: values,\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-access-token\": token,\n          },\n        }).then((res) => {\n          if (res.status === 200) {\n            alert(\"Vos données ont été modifiées\");\n            window.location.reload();\n          }\n        });\n      } else {\n        onSubmitProps.resetForm();\n      }\n    } catch {\n      alert(\"Vos données n'ont pas pu être modifiées\");\n    }\n  };\n\n  return (\n    <div>\n      {!userDetails.logo ? null : (\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={onSubmit}\n        >\n          {(formik) => (\n            <Form className=\"signIn__form\">\n              <FormikControl\n                control=\"input\"\n                type=\"text\"\n                name=\"first_name\"\n                label=\"Prénom\"\n              />\n              <FormikControl\n                control=\"input\"\n                type=\"text\"\n                name=\"last_name\"\n                label=\"Nom\"\n              />\n              <FormikControl\n                control=\"input\"\n                type=\"email\"\n                name=\"email\"\n                label=\"E-mail\"\n              />\n              <FormikControl\n                control=\"input\"\n                type=\"password\"\n                name=\"password\"\n                label=\"mot de passe\"\n                placeholder=\"********\"\n              />\n              <FormikControl\n                control=\"input\"\n                type=\"password\"\n                name=\"repeat_password\"\n                label=\"répétez votre mot de passe\"\n                placeholder=\"********\"\n              />\n              <FormikControl\n                control=\"input\"\n                type=\"tel\"\n                name=\"phone\"\n                label=\"Téléphone\"\n              />\n              <FormikControl\n                control=\"input\"\n                type=\"text\"\n                name=\"logo\"\n                label=\"Photo\"\n              />\n\n              <FormikControl\n                control=\"input\"\n                type=\"text\"\n                name=\"compagny_name\"\n                label=\"Nom de l'entreprise\"\n                placeholder=\"Microsoft\"\n              />\n              <FormikControl\n                control=\"textarea\"\n                name=\"description_compagny\"\n                label=\"Description de votre entreprise\"\n                placeholder=\"Courte description de votre entreprise\"\n              />\n\n              <Button\n                type=\"submit\"\n                disabled={!(formik.dirty && formik.isValid)}\n                className={\"btn btn--round\"}\n                value={\"Modifier mon profil\"}\n                messageError={Object.values(formik.errors).join(\", \")}\n              />\n            </Form>\n          )}\n        </Formik>\n      )}\n    </div>\n  );\n};\n\nexport default UpdateCompagnyForm;\n",["187","188"],"/home/wilder/Documents/projets/Young_Tech/front/src/components/UpdateProfileForm/UpdateAdminProfile.js",["189","190"],"/home/wilder/Documents/projets/Young_Tech/front/src/index.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/pages/ErrorPage.js",[],["191","192"],"/home/wilder/Documents/projets/Young_Tech/front/src/pages/CompagnyProfile.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/pages/ApplicationForm.js",["193","194","195","196","197"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport decode from \"jwt-decode\";\n\nimport { UserInfoContext } from \"../App\";\n\n//components\nimport FormikControl from \"../components/formik/FormikControl\";\nimport Hero from \"../components/Hero\";\nimport Button from \"../components/Button\";\n\n//const getUserDetails = require(\"../../src/services/services\");\nimport { userDetails, getUserDetails } from \"../../src/services/services\";\nconst ApplicationForm = (props) => {\n  let history = useHistory();\n  const { offer_id, compagny_id } = props.match.params;\n\n  // get user'id from localstorage\n  const token = localStorage.getItem(\"token\");\n  const userID = userDetails.userID;\n\n  //store user's details\n  const [myDetails, setMyDetails] = useState([]);\n\n\n  useEffect(() => {\n    if (userID) {\n      async function fetchData() {\n        const userDetails = await getUserDetails.getUserDetails(userID);\n        setMyDetails(userDetails);\n      }\n      fetchData();\n    }\n  }, [userID]);\n\n  const initialValues = {\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    phone: \"\",\n    cover_letter: \"\",\n  };\n\n  const validationSchema = Yup.object({\n    first_name: Yup.string().required(\"Obligatoire !\"),\n    last_name: Yup.string().required(\"Obligatoire !\"),\n    phone: Yup.string().required(\"Obligatoire !\"),\n    cover_letter: Yup.string().required(\"Obligatoire !\"),\n    email: Yup.string()\n      .email(\"Le format de l'email est incorrect !\")\n      .required(\"Obligatoire !\"),\n  });\n\n  const onSubmit = async (values) => {\n    console.log(\"values:\", values);\n    try {\n      const url = \"http://localhost:4040/users/postApplication\";\n      await axios({\n        method: \"POST\",\n        url: url,\n        data: {\n          ...values,\n          user_id: userID,\n          offer_id,\n          compagny_id,\n        },\n      }).then((res) => {\n        if (res.status === 200) {\n          alert(\"Votre candidature a été envoyée\");\n          window.location.replace(\"/\");\n        }\n      });\n    } catch {\n      alert(\"Votre candidature n'a pas pu être envoyée\");\n    }\n\n  };\n\n  return (\n    <div className=\"applicationForm\">\n      <Hero title=\"Postuler\" subtitle={\"\"} />\n      <div className=\"form-box\">\n        {!myDetails.phone ? null : (\n          <Formik\n            initialValues={myDetails || \"\"}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n            validateOnMount\n          >\n            {(formik) => (\n              <Form className=\"createAd-form\">\n                <div className=\"createAd-form__inner\">\n                  <FormikControl\n                    control=\"input\"\n                    type=\"text\"\n                    label=\"Prénom\"\n                    name=\"first_name\"\n                    placeholder=\"Anne\"\n                    value={myDetails.first_name}\n                  />\n                  <FormikControl\n                    control=\"input\"\n                    type=\"text\"\n                    label=\"Nom\"\n                    name=\"last_name\"\n                    placeholder=\"Dupont\"\n                    value={myDetails.last_name}\n                  />\n                  <FormikControl\n                    control=\"input\"\n                    type=\"email\"\n                    label=\"E-mail\"\n                    name=\"email\"\n                    placeholder=\"annedupont@domaine.com\"\n                  />\n                  <FormikControl\n                    control=\"input\"\n                    type=\"phone\"\n                    label=\"Téléphone\"\n                    name=\"phone\"\n                    placeholder=\"Anne\"\n                  />\n                  <FormikControl\n                    control=\"textarea\"\n                    label=\"Lettre de motivation\"\n                    name=\"cover_letter\"\n                    placeholder=\"pourquoi souhaitez-vous nous rejoindre\"\n                  />\n                  <Button\n                    type=\"submit\"\n                    disabled={!formik.isValid}\n                    className={\"btn\"}\n                    value={\"Postuler\"}\n                  />\n                </div>\n              </Form>\n            )}\n          </Formik>\n        )}\n\n        {!userID ? (\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n            validateOnMount\n          >\n            {(formik) => (\n              <Form className=\"createAd-form\">\n                <div className=\"createAd-form__inner\">\n                  <FormikControl\n                    control=\"input\"\n                    type=\"text\"\n                    label=\"Prénom\"\n                    name=\"first_name\"\n                    placeholder=\"Anne\"\n                  />\n                  <FormikControl\n                    control=\"input\"\n                    type=\"text\"\n                    label=\"Nom\"\n                    name=\"last_name\"\n                    placeholder=\"Dupont\"\n                  />\n                  <FormikControl\n                    control=\"input\"\n                    type=\"email\"\n                    label=\"E-mail\"\n                    name=\"email\"\n                    placeholder=\"annedupont@domaine.com\"\n                  />\n                  <FormikControl\n                    control=\"input\"\n                    type=\"phone\"\n                    label=\"Téléphone\"\n                    name=\"phone\"\n                    placeholder=\"Anne\"\n                  />\n                  <FormikControl\n                    control=\"textarea\"\n                    label=\"Lettre de motivation\"\n                    name=\"cover_letter\"\n                    placeholder=\"pourquoi souhaitez-vous nous rejoindre\"\n                  />\n                  <Button\n                    type=\"submit\"\n                    disabled={!formik.isValid}\n                    className={\"btn\"}\n                    value={\"Postuler\"}\n                  />\n                </div>\n              </Form>\n            )}\n          </Formik>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default ApplicationForm;\n","/home/wilder/Documents/projets/Young_Tech/front/src/components/Comment.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/components/Navbar.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/components/DescriptionJob.js",[],["198","199"],"/home/wilder/Documents/projets/Young_Tech/front/src/components/Header.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/components/formik/Textarea.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/components/formik/TextError.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/pages/Register.js",["200"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\n\n//components\nimport FormikControl from \"../components/formik/FormikControl\";\nimport Button from \"../components/Button\";\n\nimport { goToUserProfilePage } from \"../services/services\";\nimport { validationSchemaRegister } from \"../controllers/validationSchema\"\n\nconst Register = () => {\n  // const errormsg = \"Obligatoire !\"; //mettre dans state contexte\n  // const phoneRegex = /^(?:(?:\\+|00)33[\\s.-]{0,3}(?:\\(0\\)[\\s.-]{0,3})?|0)[1-9](?:(?:[\\s.-]?\\d{2}){4}|\\d{2}(?:[\\s.-]?\\d{3}){2})$/\n\n  const radioOptions = [\n    {\n      key: \"Un candidat\",\n      value: \"user\",\n    },\n    { key: \"Une entreprise\", value: \"compagny\" },\n  ];\n\n  const initialValues = {\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    password: \"\",\n    repeat_password: \"\",\n    phone: \"\",\n    logo:\n      \"https://upload.wikimedia.org/wikipedia/commons/f/f4/User_Avatar_2.png\",\n    compagny_name: \"\",\n    description_compagny: \"\",\n  };\n\n  // const validationSchema = Yup.object({\n  //   first_name: Yup.string().required(errormsg),\n  //   last_name: Yup.string().required(errormsg),\n  //   userType: Yup.string().required(errormsg),\n  //   email: Yup.string()\n  //     .email(\"Le format de l'email est incorrect\")\n  //     .required(errormsg),\n  //   password: Yup.string().required(errormsg),\n  //   repeat_password: Yup.string()\n  //     .oneOf(\n  //       [Yup.ref(\"password\"), \"\"],\n  //       \"Les mots de passe doivent être indentiques\"\n  //     )\n  //     .required(errormsg),\n  //   phone: Yup.string().matches(phoneRegex, 'Le format du numéro de téléphone est incorrect')\n  //     .required(errormsg),\n  //   compagny_name: Yup.string().when(\"userType\", {\n  //     is: \"compagny\",\n  //     then: Yup.string().required(errormsg),\n  //   }),\n  //   description_compagny: Yup.string().when(\"userType\", {\n  //     is: \"compagny\",\n  //     then: Yup.string().required(errormsg),\n  //   }),\n  // });\n\n  const onSubmit = async (values) => {\n    //remove empty string from the objects \"values\" in order to add into the BDD only values' fields provided\n    Object.keys(values).forEach(\n      (key) => values[key] === \"\" && delete values[key]\n    );\n\n    const url = \"http://localhost:4040/signin/register\";\n    await axios\n      .post(url, values)\n      .then((response) => {\n        if (response.status === 200) {\n          localStorage.setItem(\"token\", response.headers[\"x-access-token\"]);\n          const userType = response.data.userType;\n          const userID = response.data.userID;\n          goToUserProfilePage(userType, userID);\n        }\n      })\n      .catch((error) => {\n        alert(\"Votre compte n'a pas pu être crée\");\n      });\n  };\n\n  return (\n    <div className=\"container-signUp\">\n      <div className=\"welcome-back\">\n        <div className=\"inner-box inner-box--blue\">\n          <h1 className=\"heading-primary--main\">ravi de te revoir!</h1>\n          <p>Connecte-toi pour accéder à ton espace personnel. </p>\n          <Link\n            to={\"/signin\"}\n            id=\"signIn\"\n            className=\"btn btn--round btn--transparent\"\n          >\n            Se connecter\n          </Link>\n        </div>\n      </div>\n      <div className=\"create-account\">\n        <div className=\"inner-box\">\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchemaRegister}\n            onSubmit={onSubmit}\n            validateOnMount\n          >\n            {(formik) => {\n              console.log('formik:', formik)              \n              return (\n                <Form className=\"signIn__form\">\n                  <h1 className=\"heading-primary--main\">Créer un compte</h1>\n                  <FormikControl\n                    options={radioOptions}\n                    control=\"radio\"\n                    label=\"Je suis\"\n                    name=\"userType\"\n                  />\n                  <FormikControl\n                    control=\"input\"\n                    type=\"text\"\n                    name=\"first_name\"\n                    label=\"Prénom\"\n                    placeholder=\"Anne\"\n                  />\n                  <FormikControl\n                    control=\"input\"\n                    type=\"text\"\n                    name=\"last_name\"\n                    label=\"Nom\"\n                    placeholder=\"Dupont\"\n                  />\n\n                  <FormikControl\n                    control=\"input\"\n                    type=\"email\"\n                    name=\"email\"\n                    label=\"E-mail\"\n                    placeholder=\"annedupont@gmail.com\"\n                  />\n                  <FormikControl\n                    control=\"input\"\n                    type=\"password\"\n                    name=\"password\"\n                    label=\"mot de passe\"\n                    placeholder=\"********\"\n                  />\n                  <FormikControl\n                    control=\"input\"\n                    type=\"password\"\n                    name=\"repeat_password\"\n                    label=\"répétez votre mot de passe\"\n                    placeholder=\"********\"\n                  />\n                  <FormikControl\n                    control=\"input\"\n                    type=\"tel\"\n                    name=\"phone\"\n                    label=\"Téléphone\"\n                    placeholder=\"06 00 00 00 00\"\n                  />\n                  <FormikControl\n                    control=\"input\"\n                    type=\"text\"\n                    name=\"logo\"\n                    label=\"Photo\"\n                    placeholder=\"Insérer l'url de votre logo\"\n                  />\n\n                  {formik.values.userType === \"compagny\" ? (\n                    <>\n                      <FormikControl\n                        control=\"input\"\n                        type=\"text\"\n                        name=\"compagny_name\"\n                        label=\"Nom de l'entreprise\"\n                        placeholder=\"Microsoft\"\n                      />\n                      <FormikControl\n                        control=\"textarea\"\n                        name=\"description_compagny\"\n                        label=\"Description de votre entreprise\"\n                        placeholder=\"Courte description de votre entreprise\"\n                      />\n                    </>\n                  ) : null}\n\n                  <Button\n                    type=\"submit\"\n                    disabled={!formik.isValid}\n                    className={\"btn btn--round\"}\n                    value={\"Créer mon compte\"}\n                  />\n                </Form>\n              );\n            }}\n          </Formik>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","/home/wilder/Documents/projets/Young_Tech/front/src/components/UpdateProfileForm/UpdateUserProfile.js",["201","202"],"import React, { useState } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport decode from \"jwt-decode\";\n//components\nimport FormikControl from \"../formik/FormikControl\";\nimport Button from \"../Button\";\n\nconst UpdateUserProfile = (props) => {\n  //get the user's id form localstorage\n  const token = localStorage.getItem(\"token\");\n  const { userID } = decode(token);\n  // get user's details from userProfile component\n  const userDetails = props.userDetails;\n  const phoneRegex = /^(?:(?:\\+|00)33[\\s.-]{0,3}(?:\\(0\\)[\\s.-]{0,3})?|0)[1-9](?:(?:[\\s.-]?\\d{2}){4}|\\d{2}(?:[\\s.-]?\\d{3}){2})$/\n  const [response, setResponse] = useState();\n\n  //set the values of the form with userDetails content\n  const initialValues = {\n    first_name: userDetails.first_name,\n    last_name: userDetails.last_name,\n    email: userDetails.email,\n    phone: userDetails.phone,\n    logo: userDetails.logo,\n    password: \"\",\n    repeat_password: \"\",\n  };\n\n  //set rules for validating of the field's form\n  const validationSchema = Yup.object({\n    first_name: Yup.string(),\n    last_name: Yup.string(),\n    type: Yup.string(),\n    email: Yup.string().email(\"Le format de l'email est incorrect\"),\n    password: Yup.string(),\n    repeat_password: Yup.string()\n      .oneOf(\n        [Yup.ref(\"password\"), \"\"],\n        \"Les mots de passe doivent être indentiques\"\n      )\n      .when(\"password\", {\n        is: (password) => password,\n        then: Yup.string().required(\n          \"Veuillez de nouveau saisir votre mot de passe\"\n        ),\n      }),\n      phone: Yup.string().matches(phoneRegex, 'Le format du numéro de téléphone est incorrect'),\n  });\n\n  function keepOnlyChangedValues(object1, object2) {\n    const keys1 = Object.keys(object1);\n\n    for (let key of keys1) {\n      if (object1[key] === object2[key]) {\n        delete object2[key];\n      }\n    }\n  }\n\n  //send new user's details to the BDD\n  const onSubmit = async (values, onSubmitProps) => {\n\n    keepOnlyChangedValues(initialValues, values);\n\n    delete values[\"repeat_password\"];\n\n    const confirmChoice = window.confirm(\n      \"Etes-vous sûr de vouloir modifier vos données ? \"\n    );\n\n    try {\n      if (confirmChoice) {\n        const url = `http://localhost:4040/allpeople/updateProfile/${userID}`;\n        await axios({\n          method: \"PUT\",\n          url: url,\n          data: values,\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-access-token\": token,\n          },\n        }).then((res) => {\n          if (res.status === 200) {\n            alert(\"Vos données ont été modifiées\");\n            window.location.reload();\n          }\n        });\n      } else {\n        onSubmitProps.resetForm();\n      }\n    } catch {\n      alert(\"Vos données n'ont pas pu être modifiées\");\n    }\n  };\n\n  return (\n    <div>\n      {!userDetails.logo ? null : (\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={onSubmit}\n        >\n          {(formik) => {\n            return (\n              <Form className=\"signIn__form\">\n                <FormikControl\n                  control=\"input\"\n                  type=\"text\"\n                  name=\"first_name\"\n                  label=\"Prénom\"\n                />\n                <FormikControl\n                  control=\"input\"\n                  type=\"text\"\n                  name=\"last_name\"\n                  label=\"Nom\"\n                />\n                <FormikControl\n                  control=\"input\"\n                  type=\"email\"\n                  name=\"email\"\n                  label=\"E-mail\"\n                />\n                <FormikControl\n                  control=\"input\"\n                  type=\"password\"\n                  name=\"password\"\n                  label=\"mot de passe\"\n                  placeholder=\"********\"\n                />\n                <FormikControl\n                  control=\"input\"\n                  type=\"password\"\n                  name=\"repeat_password\"\n                  label=\"répétez votre mot de passe\"\n                  placeholder=\"********\"\n                />\n                <FormikControl\n                  control=\"input\"\n                  type=\"tel\"\n                  name=\"phone\"\n                  label=\"Téléphone\"\n                />\n                <FormikControl\n                  control=\"input\"\n                  type=\"text\"\n                  name=\"logo\"\n                  label=\"Photo\"\n                />\n\n                <Button\n                  type=\"submit\"\n                  disabled={!(formik.dirty && formik.isValid)}\n                  className={\"btn btn--round\"}\n                  value={\"Modifier mon profil\"}\n                />\n              </Form>\n            );\n          }}\n        </Formik>\n      )}\n    </div>\n  );\n};\n\nexport default UpdateUserProfile;\n",["203","204"],"/home/wilder/Documents/projets/Young_Tech/front/src/serviceWorker.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/pages/Application.js",["205"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport decode from \"jwt-decode\";\n// components\nimport Hero from \"../components/Hero\";\n\nconst getUserDetails = require(\"../services/services\");\n\nconst Application = () => {\n  //get the user's id of the compagny\n  const token = localStorage.getItem(\"token\")\n  const {userID, compagny_name} = decode(token)\n \n  //store all offers of the comapgny\n  const [myApplications, setMyApplications] = useState([]);\n  //store compagny's details\n  const [myDetails, setMyDetails] = useState([]);\n  useEffect(() => {\n    const getMyApplications = async () => {\n     \n      const url = `http://localhost:4040/compagny/application/${compagny_name}`;\n      const result = await axios.get(url);\n      setMyApplications(result.data);\n    };\n    getMyApplications();\n\n    //get user's details form \"getUserDetails\" function (services component)\n    async function fetchData() {\n      const userDetails = await getUserDetails.getUserDetails(userID);\n      setMyDetails(userDetails);\n    }\n    fetchData();\n  }, [userID, compagny_name]);\n\n\n  return (\n    <div className=\"application\">\n      <Hero title={\"Les candidatures\"} subtitle={\"\"} />\n\n      {myApplications.length < 1 ? (\n        <div>Aucune candidature</div>\n      ) : (\n        // : Object.keys(groupedOffer).map((keyname, i) =>\n        myApplications.map(application => (\n          <>\n          <div className=\"application-list\">\n            <div className=\"application-items\">\n              <p>{application.job_name}</p>\n              <p>{application.first_name}</p>\n              <p>{application.last_name}</p>\n              <p>{application.phone}</p>\n              <p>{application.cover_letter}</p>\n            </div>\n            <hr></hr>\n          </div>;\n          </>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default Application;\n","/home/wilder/Documents/projets/Young_Tech/front/src/components/LatestJob.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/components/Button.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/components/JobContent.js",["206"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport Modal from \"react-modal\";\n//components\nimport Button from \"../components/Button\";\n\nimport { userDetails } from \"../services/services\"\n\nconst JobContent = (props) => {\n  const {\n    idJob,\n    compagny_id,\n    description_compagny,\n    description_position,\n    prerequisite,\n    userType,\n  } = props;\n\n  // get user'id from localstorage\n  const token = localStorage.getItem(\"token\");\n  const userID = userDetails.userID\n\n  //handle the modal and the response from the back when deleting something\n  const [modalIsOpen, setmodalIsOpen] = useState(false);\n  const [response, setResponse] = useState([]);\n\n  //handle opening modale\n  const handleModale = () => {\n    setmodalIsOpen(true);\n  };\n\n  //close the modal and delete the offer\n  const handleDeleteOffer = async () => {\n    setmodalIsOpen(false);\n    switch (userType) {\n      case \"compagny\":\n        try {\n          const urlAdmin = `http://localhost:4040/compagny/deleteOffer/${idJob}`;\n          await axios({\n            method: \"DELETE\",\n            url: urlAdmin,\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-access-token\": token,\n            },\n          }).then((res) => setResponse(res.data));\n        } catch {\n          alert(\"L'offre n'a pas pu être supprimé\");\n        }\n        break;\n      case \"admin\":\n        try {\n          const urlAdmin = `http://localhost:4040/compagny/deleteOffer/${idJob}`;\n          await axios({\n            method: \"DELETE\",\n            url: urlAdmin,\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-access-token\": token,\n            },\n          }).then((res) => setResponse(res.data));\n        } catch {\n          alert(\"L'offre n'a pas pu être supprimé\");\n        }\n        break;\n      case \"user\":\n        try {\n          const urlUser = `http://localhost:4040/users/deleteApplication/${userID}/${idJob}`;\n          await axios({\n            method: \"DELETE\",\n            url: urlUser,\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-access-token\": token,\n            },\n          }).then((res) => {\n            if (res.status === 200) {\n              alert(\"Votre candidature a été supprimer\");\n              window.location.reload()\n            }\n          });\n        } catch {\n          alert(\"Votre candidature n'a pas pu être supprimer\");\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <>\n      <div className=\"jobPage__content\">\n        <div className=\"jobPage__description\">\n          <h6>Description de l'entreprise</h6>\n          <p>{description_compagny}</p>\n          <h6>Description du poste</h6>\n          <p>{description_position}</p>\n        </div>\n        <div className=\"jobPage__prerequisite\">\n          <h6>Pré-requis</h6>\n          <p>{prerequisite}</p>\n        </div>\n        <div className=\"side-bar\">\n          <div className=\"widget\">\n            <div className=\"inner\">\n              {/* element available from homepage */}\n              {userType ? null : (\n                <Button className={\"btn btn--grey\"} value={\"Sauvegarder\"} />\n              )}\n              {userType ? null : (\n                <Link to={`/apply/${idJob}/${compagny_id}`} className=\"btn\">\n                  Postuler\n                </Link>\n              )}\n\n              {/* element available from compagnyProfile and/or adminProfile */}\n              {userType === \"compagny\" || userType === \"admin\" ? (\n                <Link\n                  to={{\n                    pathname: `/updatead/${idJob}`,\n                    state: { compagny_id: true },\n                  }}\n                  className=\"btn btn--grey\"\n                >\n                  Editer\n                </Link>\n              ) : null}\n              {userType === \"compagny\" || userType === \"admin\" ? (\n                <Button\n                  action={handleModale}\n                  value={\"Supprimer\"}\n                  className=\"btn\"\n                />\n              ) : null}\n\n              {/* element available for user only */}\n              {userType === \"user\" ? (\n                <Button\n                  value={\"Retirer sa candidature\"}\n                  className=\"btn btn-round\"\n                  action={handleModale}\n                />\n              ) : null}\n            </div>\n          </div>\n        </div>\n      </div>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={() => setmodalIsOpen(false)}\n        shouldCloseOnOverLayClick={false}\n      >\n        <div>\n          <h2>confirmer la suppression ?</h2>\n          <button onClick={() => handleDeleteOffer()}>Oui</button>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default JobContent;\n","/home/wilder/Documents/projets/Young_Tech/front/src/components/formik/DatePicker.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/components/formik/RadioButtons.js",[],["207","208"],"/home/wilder/Documents/projets/Young_Tech/front/src/pages/Homepage.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/pages/JobPage.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/pages/CreateAd.js",["209"],"import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport decode from \"jwt-decode\";\n//components\nimport FormikControl from \"../components/formik/FormikControl\";\nimport Hero from \"../components/Hero\";\nimport Button from \"../components/Button\";\n\nconst CreatedAd = () => {\n  let history = useHistory();\n  //(state) - get this information from back when the user is login\n  const token = localStorage.getItem(\"token\");\n  const { userID, compagny_name } = decode(token);\n\n  /**\n   * Formik propreties\n   */\n\n  //for job_name select element\n  const dropdownOptionsJob = [\n    {\n      key: \"Choissisez un métier\",\n      value: \"\",\n      selected: true,\n      hidden: true,\n      disabled: true,\n    },\n    { key: \"Développeur frontend\", value: \"Développeur frontend\" },\n    { key: \"Développeur backend\", value: \"Développeur backend\" },\n    { key: \"Designer\", value: \"Designer\" },\n    { key: \"Intégrateur web\", value: \"Intégrateur web\" },\n  ];\n  // for contract select element\n  const dropdownOptionsContract = [\n    {\n      key: \"Type de contrat\",\n      value: \"\",\n      selected: true,\n      hidden: true,\n      disabled: true,\n    },\n    { key: \"Alternance\", value: \"Alternance\" },\n    { key: \"CDI\", value: \"CDI\" },\n    { key: \"CDD\", value: \"CDD\" },\n    { key: \"Stage\", value: \"Stage\" },\n  ];\n  const initialValues = {\n    job_name: \"\",\n    description_position: \"\",\n    location: \"\",\n    wage: \"\",\n    contract: \"\",\n    prerequisite: \"\",\n  };\n  const validationSchema = Yup.object({\n    job_name: Yup.string().required(\"Obligatoire !\"),\n    description_position: Yup.string().required(\"Obligatoire !\"),\n    location: Yup.string().required(\"Obligatoire !\"),\n    contract: Yup.string().required(\"Obligatoire !\"),\n  });\n\n  const onSubmit = async (values, onSubmitProps) => {\n    const url = \"http://localhost:4040/compagny/createad\";\n    //await axios.post(url, { ...values, userID, compagny_name });\n    await axios({\n      method: \"POST\",\n      url: url,\n      data: {\n        ...values,\n        userID: userID,\n        compagny_name: compagny_name,\n      },\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": token,\n      },\n    }).then((res) => {\n      if (res.status === 200) {\n        alert(\"L'offre à bien été crée\");\n        onSubmitProps.resetForm();\n        window.location.replace(`compagny/${userID}`);\n      }\n    }).catch(() => {\n      alert(\"L'offre n'a pas pu être crée\")\n    })\n  };\n\n  return (\n    <div className=\"createAd\">\n      <Hero title={\"Créer une offre\"} subtitle={\"\"} />\n      <div className=\"form-box\">\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={onSubmit}\n          validateOnMount\n        >\n          {(formik) => (\n            <Form className=\"createAd-form\">\n              <div className=\"createAd-form__inner\">\n                <FormikControl\n                  control=\"select\"\n                  label=\"Métier\"\n                  name=\"job_name\"\n                  options={dropdownOptionsJob}\n                />\n\n                <FormikControl\n                  control=\"textarea\"\n                  label=\"Description du poste\"\n                  name=\"description_position\"\n                  placeholder=\"Décrivez le poste\"\n                />\n                <FormikControl\n                  control=\"textarea\"\n                  label=\"Pré-requis\"\n                  name=\"prerequisite\"\n                  placeholder=\"Quels sont les pré-requis pour le poste\"\n                />\n                <FormikControl\n                  control=\"select\"\n                  label=\"Type de contrat\"\n                  name=\"contract\"\n                  options={dropdownOptionsContract}\n                />\n                <FormikControl\n                  control=\"input\"\n                  label=\"Salaire (par mois)\"\n                  name=\"wage\"\n                  placeholder=\"ex:1200\"\n                />\n                <FormikControl\n                  control=\"input\"\n                  label=\"Lieu\"\n                  name=\"location\"\n                  placeholder=\"Lieu du poste\"\n                />\n                <Button\n                  type=\"submit\"\n                  disabled={!formik.isValid}\n                  className={\"btn\"}\n                  value={\"Créer l'offre\"}\n                />\n              </div>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default CreatedAd;\n","/home/wilder/Documents/projets/Young_Tech/front/src/pages/UpdateAd.js",["210"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Redirect, useHistory} from \"react-router-dom\"\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport decode from \"jwt-decode\";\n//components\nimport FormikControl from \"../components/formik/FormikControl\";\nimport Button from \"../components/Button\";\nimport DescriptionJob from \"../components/DescriptionJob\";\nimport Hero from \"../components/Hero\";\n\nconst UpdateAd = (props) => {\n  let history = useHistory()\n  const offerID = props.match.params.id;\n  const token = localStorage.getItem(\"token\");\n  const { userID } = decode(token);\n\n  const [adDetails, setadDetails] = useState([]);\n  const [response, setResponse] = useState([]);\n\n  useEffect(() => {\n    const getAdDetails = async () => {\n      const url = `http://localhost:4040/allpeople/getOffer/${offerID}`;\n      const results = await axios.get(url);\n      setadDetails(results.data[0]);\n    };\n    getAdDetails();\n  }, [response, offerID]);\n\n   /**\n   * Formik propreties\n   */\n\n    //for job_name select element\n    const dropdownOptionsJob = [\n        {\n          key: \"Choissisez un métier\",\n          value: \"\",\n          selected: true,\n          hidden: true,\n          disabled: true,\n        },\n        { key: \"Développeur frontend\", value: \"Développeur frontend\" },\n        { key: \"Développeur backend\", value: \"Développeur backend\" },\n        { key: \"Designer\", value: \"Designer\" },\n        {key: \"Intégrateur web\", value: \"Intégrateur web\"}\n      ];\n\n        const dropdownOptionsContract = [\n    {\n      key: \"Type de contrat\",\n      value: \"\",\n      selected: true,\n      hidden: true,\n      disabled: true,\n    },\n    { key: \"Alternance\", value: \"Alternance\" },\n    { key: \"CDI\", value: \"CDI\" },\n    { key: \"CDD\", value: \"CDD\" },\n    { key: \"Stage\", value: \"Stage\" },\n  ];\n\n  const initialValues = {\n    job_name: adDetails.job_name,\n    description_position: adDetails.description_position,\n    prerequisite: adDetails.prerequisite,\n    wage: adDetails.wage,\n    contract: adDetails.contract,\n    location: adDetails.location,\n  };\n\n  const validationSchema = Yup.object({\n    job_name: Yup.string(),\n    description_position: Yup.string(),\n    prerequisite: Yup.string(),\n    wage: Yup.string(),\n    contract: Yup.string(),\n    location: Yup.string(),\n  });\n\n  const onSubmit = async (values) => {\n    const url = `http://localhost:4040/compagny/updatead/${offerID}`;\n    //const results = await axios.put(url, values)\n    await axios({\n      method: \"PUT\",\n      url: url,\n      data: values,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": token,\n      },\n    })\n    .then((res)=>{\n      setResponse(res)\n      if(res.status === 200){\n        alert(\"L'offre à été modifié avec succès.\")\n        window.location.replace(`/compagny/${userID}`)\n      }\n    })\n    .catch(() => {\n      alert(\"L'offre n'a pas pu être modifiée\")\n      history.goBack()\n    })\n  };\n\n \n  return (\n    <div className=\"updateAd\">\n        <Hero title={\"Modifier une offre\"} subtitle={null}/>\n        <DescriptionJob \n        key={offerID}\n        idJob={offerID}\n        logo={adDetails.logo}\n        wage={adDetails.wage}\n        contract={adDetails.contract}\n        job_name={adDetails.job_name}\n        compagny_name={adDetails.compagny_name}\n        location={adDetails.location}\n        />\n        <div className=\"form-box\">\n      {!adDetails.location ? null : (\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={onSubmit}\n        >\n          {(formik) => (\n            <Form className=\"updateAd-form\">\n                <div className=\"updateAd-form__inner\">\n             <FormikControl\n                  control=\"select\"\n                  label=\"Métier\"\n                  name=\"job_name\"\n                  options={dropdownOptionsJob}\n                />\n               <FormikControl\n                  control=\"textarea\"\n                  label=\"Description du poste\"\n                  name=\"description_position\"\n                  placeholder=\"Décrivez le poste\"\n                />\n                 <FormikControl\n                  control=\"textarea\"\n                  label=\"Pré-requis\"\n                  name=\"prerequisite\"\n                  placeholder=\"Décrivez le poste\"\n                />\n               <FormikControl\n                  control=\"select\"\n                  label=\"Type de contrat\"\n                  name=\"contract\"\n                  options={dropdownOptionsContract}\n                />\n             <FormikControl\n                  control=\"input\"\n                  label=\"Salaire (par mois)\"\n                  name=\"wage\"\n                  placeholder=\"ex:1200\"\n                />\n             <FormikControl\n                  control=\"input\"\n                  label=\"Lieu\"\n                  name=\"location\"\n                  placeholder=\"Lieu du poste\"\n                />\n              <Button\n                  type=\"submit\"\n                  disabled={!(formik.dirty && formik.isValid)}\n                  className={\"btn\"}\n                  value={\"Modifier l'offre\"}\n                />\n                </div>\n            </Form>\n          )}\n        </Formik>\n      )}\n      </div>\n    </div>\n  );\n};\n\nexport default UpdateAd;\n","/home/wilder/Documents/projets/Young_Tech/front/src/components/Hero.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/components/FilterBar.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/components/formik/FormikControl.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/components/JobList.js",[],["211","212"],"/home/wilder/Documents/projets/Young_Tech/front/src/components/formik/Select.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/App.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/components/Category.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/components/formik/Input.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/pages/UserProfile.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/components/DeleteAccount.js",["213"],"import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Modal from \"react-modal\";\nimport decode from \"jwt-decode\";\n//components\nimport Button from \"./Button\";\n\nModal.setAppElement(\"#root\");\n\nconst DeleteAccount = () => {\n  let history = useHistory();\n\n  //get the user's id form localstorage\n  const token = localStorage.getItem(\"token\");\n  const { userID } = decode(token);\n\n  //handle modal opening\n  const [modalIsOpen, setmodalIsOpen] = useState(false);\n\n  //handle modal opening\n  const handleModale = () => {\n    setmodalIsOpen(true);\n  };\n\n  //delete the account of the user\n  const deleteAccount = async () => {\n    setmodalIsOpen(false);\n    const url = `http://localhost:4040/allpeople/deleteUserAccount/${userID}`;\n    await axios({\n      method: \"DELETE\",\n      url: url,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": token,\n      },\n    })\n      .then(() => {\n        alert(\"votre compte à été supprimé\");\n        localStorage.clear();\n        window.location.replace(\"/\");\n      })\n      .catch(() => {\n        alert(\"votre compte n'a pas pu être supprimé\");\n      });\n  };\n\n  return (\n    <>\n      <div className=\"othersOptions\">\n        <Button\n          action={() => handleModale()}\n          className={\"btn btn--round btn--grey\"}\n          value={\"supprimer mon compte\"}\n        />\n      </div>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={() => setmodalIsOpen(false)}\n        shouldCloseOnOverLayClick={false}\n      >\n        <div>\n          <h2>confirmer la suppression ?</h2>\n          <button onClick={() => deleteAccount()}>Oui</button>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default DeleteAccount;\n","/home/wilder/Documents/projets/Young_Tech/front/src/services/services.js",["214"],"import React from 'react';\nimport axios from \"axios\";\nimport decode from \"jwt-decode\";\n\n\n\n// get user's details from BDD\nexport const getUserDetails = async () => {\n  const token = localStorage.getItem(\"token\");\n  const { userID } = decode(token);\n\n  const url = `http://localhost:4040/allpeople/userDetails/${userID}`;\n  const results = await axios({\n    method: \"GET\",\n    url: url,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-access-token\": token,\n    },\n  });\n  const details = results.data[0];\n  return details;\n};\n\n// Check if user is logged\nexport const isLogged = () => {\n\n  // 1. stock token from localstorage\n  const token = localStorage.getItem(\"token\");\n  // 2. verify if there is a token\n  if (!token) {\n    return false;\n  }\n  // 3. verify if the token has been expired\n  try {\n    const { exp } = decode(token);\n    if (exp < new Date().getTime() / 1000) {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n  const { userType } = decode(token);\n  return userType;\n};\n\n// store user's details\nexport const userDetails = () => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const {\n        userID,\n        userType,\n        email,\n        first_name,\n        last_name,\n        logo,\n        phone,\n        description_compagny,\n        compagnyID,\n      } = decode(token);\n      return {\n        userType,\n        userID,\n        email,\n        first_name,\n        last_name,\n        phone,\n        description_compagny,\n        compagnyID,\n        logo,\n        isLogged: true,\n      };\n    }\n  } catch (err) {\n    console.log(\"No user connected: \" + err);\n    const isLogged = false;\n    return isLogged;\n  }\n};\n\n// Redirect user towards his profile page once log in\nexport const goToUserProfilePage = (userType, userID) => {\n  switch (userType) {\n    case \"admin\":\n      return window.location.replace(`/admin/${userID}`);\n    case \"user\":\n      return window.location.replace(`/user/${userID}`);\n    case \"compagny\":\n      return window.location.replace(`/compagny/${userID}`);\n    default:\n      return window.location.replace(\"/\");\n  }\n};","/home/wilder/Documents/projets/Young_Tech/front/src/controllers/validationSchema.js",[],{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"215","replacedBy":"219"},{"ruleId":"217","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":18,"column":11,"nodeType":"223","messageId":"224","endLine":18,"endColumn":17},{"ruleId":"221","severity":1,"message":"225","line":17,"column":10,"nodeType":"223","messageId":"224","endLine":17,"endColumn":18},{"ruleId":"221","severity":1,"message":"226","line":17,"column":20,"nodeType":"223","messageId":"224","endLine":17,"endColumn":31},{"ruleId":"215","replacedBy":"227"},{"ruleId":"217","replacedBy":"228"},{"ruleId":"221","severity":1,"message":"225","line":17,"column":10,"nodeType":"223","messageId":"224","endLine":17,"endColumn":18},{"ruleId":"221","severity":1,"message":"226","line":17,"column":20,"nodeType":"223","messageId":"224","endLine":17,"endColumn":31},{"ruleId":"215","replacedBy":"229"},{"ruleId":"217","replacedBy":"230"},{"ruleId":"221","severity":1,"message":"231","line":1,"column":38,"nodeType":"223","messageId":"224","endLine":1,"endColumn":48},{"ruleId":"221","severity":1,"message":"232","line":6,"column":8,"nodeType":"223","messageId":"224","endLine":6,"endColumn":14},{"ruleId":"221","severity":1,"message":"233","line":8,"column":10,"nodeType":"223","messageId":"224","endLine":8,"endColumn":25},{"ruleId":"221","severity":1,"message":"234","line":18,"column":7,"nodeType":"223","messageId":"224","endLine":18,"endColumn":14},{"ruleId":"221","severity":1,"message":"235","line":22,"column":9,"nodeType":"223","messageId":"224","endLine":22,"endColumn":14},{"ruleId":"215","replacedBy":"236"},{"ruleId":"217","replacedBy":"237"},{"ruleId":"221","severity":1,"message":"238","line":4,"column":13,"nodeType":"223","messageId":"224","endLine":4,"endColumn":16},{"ruleId":"221","severity":1,"message":"225","line":17,"column":10,"nodeType":"223","messageId":"224","endLine":17,"endColumn":18},{"ruleId":"221","severity":1,"message":"226","line":17,"column":20,"nodeType":"223","messageId":"224","endLine":17,"endColumn":31},{"ruleId":"215","replacedBy":"239"},{"ruleId":"217","replacedBy":"240"},{"ruleId":"221","severity":1,"message":"241","line":17,"column":10,"nodeType":"223","messageId":"224","endLine":17,"endColumn":19},{"ruleId":"221","severity":1,"message":"225","line":26,"column":10,"nodeType":"223","messageId":"224","endLine":26,"endColumn":18},{"ruleId":"215","replacedBy":"242"},{"ruleId":"217","replacedBy":"243"},{"ruleId":"221","severity":1,"message":"234","line":13,"column":7,"nodeType":"223","messageId":"224","endLine":13,"endColumn":14},{"ruleId":"221","severity":1,"message":"244","line":3,"column":10,"nodeType":"223","messageId":"224","endLine":3,"endColumn":18},{"ruleId":"215","replacedBy":"245"},{"ruleId":"217","replacedBy":"246"},{"ruleId":"221","severity":1,"message":"234","line":12,"column":7,"nodeType":"223","messageId":"224","endLine":12,"endColumn":14},{"ruleId":"221","severity":1,"message":"247","line":1,"column":8,"nodeType":"223","messageId":"224","endLine":1,"endColumn":13},"no-native-reassign",["248"],"no-negated-in-lhs",["249"],["248"],["249"],"no-unused-vars","'userID' is assigned a value but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","'setResponse' is assigned a value but never used.",["248"],["249"],["248"],["249"],"'useContext' is defined but never used.","'decode' is defined but never used.","'UserInfoContext' is defined but never used.","'history' is assigned a value but never used.","'token' is assigned a value but never used.",["248"],["249"],"'Yup' is defined but never used.",["248"],["249"],"'myDetails' is assigned a value but never used.",["248"],["249"],"'Redirect' is defined but never used.",["248"],["249"],"'React' is defined but never used.","no-global-assign","no-unsafe-negation"]